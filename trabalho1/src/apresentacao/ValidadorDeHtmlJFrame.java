/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author heichstadt
 */
public class ValidadorDeHtmlJFrame extends javax.swing.JFrame {

    // Atributo estática para pegar o arquivo que está sendo importado pelo ImportarArquivoForm
    private static JFileChooser arquivoImportado;
    
    // Atributo para pegar o diretório onde se encontra o arquivo
    private String diretorioArquivo;
    
    // Atributo para pegar o diretório completo do arquivo
    private String diretorioCompleto;

     /**
     * Creates new form ValidadorDeHtmlJFrame
     */
    public ValidadorDeHtmlJFrame() {
        initComponents();
    }
    
    public static JFileChooser getArquivoImportado() {
        return arquivoImportado;
    }

    public static void setArquivoImportado(JFileChooser arquivoImportado) {
        if(arquivoImportado != null)
            ValidadorDeHtmlJFrame.arquivoImportado = arquivoImportado;
        else
            throw new IllegalArgumentException("O Arquivo não pode ser nulo");
    }
    
     public String getDiretorioArquivo() {
        return diretorioArquivo;
    }

    public void setDiretorioArquivo(String diretorioArquivo) {
        if(!diretorioArquivo.isEmpty())
            this.diretorioArquivo = diretorioArquivo;
        else
            throw new IllegalArgumentException("Diretório inválido");
    }

    public String getDiretorioCompleto() {
        return diretorioCompleto;
    }

    public void setDiretorioCompleto(String diretorioCompleto) {
        if(!diretorioCompleto.isEmpty())
            this.diretorioCompleto = diretorioCompleto;
        else
            throw new IllegalArgumentException("Diretório inválido");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        analisarButton = new javax.swing.JButton();
        selecionarArquivoButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tagsEncontradasTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultadoTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Arquivo:");

        analisarButton.setText("Analisar");
        analisarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                analisarButtonActionPerformed(evt);
            }
        });

        selecionarArquivoButton.setText("Selecionar");
        selecionarArquivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarArquivoButtonActionPerformed(evt);
            }
        });

        tagsEncontradasTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tag", "Número de ocorrências"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tagsEncontradasTable);

        resultadoTextArea.setColumns(20);
        resultadoTextArea.setRows(5);
        jScrollPane2.setViewportView(resultadoTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selecionarArquivoButton)
                        .addGap(18, 18, 18)
                        .addComponent(analisarButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(analisarButton)
                    .addComponent(selecionarArquivoButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selecionarArquivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarArquivoButtonActionPerformed
       try{
        ImportarArquivoForm importarArquivoForm = new ImportarArquivoForm();
        importarArquivoForm.setVisible(true);
       }
       catch(Exception ex){
           JOptionPane.showMessageDialog(this, "Erro ao ler arquivo");
       }
    }//GEN-LAST:event_selecionarArquivoButtonActionPerformed

    private void analisarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_analisarButtonActionPerformed
        obterValoresArquivos();
        
    }//GEN-LAST:event_analisarButtonActionPerformed

    private void obterValoresArquivos(){
    if(arquivoImportado != null){
            this.setDiretorioCompleto(arquivoImportado.getSelectedFile().getAbsolutePath());
            this.setDiretorioArquivo( arquivoImportado.getCurrentDirectory().toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ValidadorDeHtmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ValidadorDeHtmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ValidadorDeHtmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ValidadorDeHtmlJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ValidadorDeHtmlJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton analisarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextArea resultadoTextArea;
    private javax.swing.JButton selecionarArquivoButton;
    private javax.swing.JTable tagsEncontradasTable;
    // End of variables declaration//GEN-END:variables
}
